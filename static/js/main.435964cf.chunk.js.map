{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","alt","src","monstersNew","name","email","CardList","map","id","SearchBox","placeholder","handleChange","className","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsterNew","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAAe,I,kBCGFA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,MAAM,iBAAX,UACI,qBAAKC,IAAI,aAAaC,IAAK,yDAC3B,6BAAMH,EAAMI,YAAYC,OACxB,4BAAKL,EAAMI,YAAYE,YCDlBC,G,MAAW,SAAAP,GAAK,OACzB,qBAAKC,MAAM,YAAX,SAEID,EAAMI,YAAYI,KAClB,SAAAJ,GAAW,OACX,cAAC,EAAD,CAA6BA,YAAaA,GAA9BA,EAAYK,WCPnBC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OAErB,uBACAC,UAAY,SACZC,KAAK,SACLH,YAAaA,EACbI,SAAWH,MCwDAI,E,kDAzDb,aAAc,IAAD,8BACX,gBAoBFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,SAnBvC,EAAKC,MAAQ,CACXlB,YAAc,GACde,YAAa,IALJ,E,qDAWf,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAAEd,YAAYuB,S,oBAW5C,WAAQ,MAK6BC,KAAKN,MAAjClB,EALD,EAKCA,YAAae,EALd,EAKcA,YACdU,EAAqBzB,EAAY0B,QACrC,SAAA1B,GAAW,OACXA,EAAYC,KAAK0B,cAAcC,SAASb,EAAYY,kBAGtD,OACE,sBAAKlB,UAAU,MAAf,UACE,iDAYA,cAAC,EAAD,CAAWF,YAAY,iBAAiBC,aAAgBgB,KAAKhB,eAE7D,cAAC,EAAD,CAAUR,YAAayB,W,GArDbI,aCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.435964cf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div class=\"card-container\">\r\n        <img alt=\"monsterNew\" src={'https://robohash.org/${props.monsterNew.id}?set=set2'}></img>\r\n        <h2>{ props.monstersNew.name }</h2>\r\n        <p>{ props.monstersNew.email }</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = props => (\r\n    <div class=\"card-list\">\r\n    { \r\n        props.monstersNew.map(\r\n        monstersNew =>\r\n        <Card key={ monstersNew.id } monstersNew={monstersNew}>\r\n        </Card>\r\n        )\r\n    }\r\n        \r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\r\n    <input \r\n    className = 'search' \r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange= {handleChange} \r\n    />\r\n    \r\n\r\n);","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { CardList } from \"./components/card-list/card-list.component\";\r\nimport { CardListNew } from \"./components/card-list/card-list.component\";\r\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n\r\n    this.state = {\r\n      monstersNew : [],\r\n      searchField: ''\r\n  };\r\n\r\n  // this.handleChange = this.handleChange.bind(this);\r\n}\r\n\r\ncomponentDidMount(){\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response => response.json())\r\n  .then(users => this.setState( { monstersNew:users } ))\r\n}\r\n\r\n  // handleChange = (e) => {\r\n  // this.setState({ searchField: e.target.value });\r\n  // }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField : e.target.value });\r\n  }\r\n\r\n  render(){\r\n\r\n    // const {monstersNew, searchField} = this.state;\r\n    // const fieldMonster = monstersNew.filter(monstersNew => monstersNew.name.toLowerCase().includes(searchField.toLowerCase()));\r\n\r\n    const {monstersNew, searchField} = this.state;\r\n    const filteredMonsterNew = monstersNew.filter(\r\n      monstersNew => \r\n      monstersNew.name.toLowerCase().includes(searchField.toLowerCase()\r\n        ));\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Monster Rolodex</h1>\r\n        {/* <input type=\"search\" placeholder=\"Search Monster\" \r\n        onChange={ e => console.log(e.target.value)}></input> */}\r\n         {/* <input type=\"search\" placeholder=\"Search Monster\" \r\n        onChange = { \r\n          e => { this.setState({ searchField: e.target.value });\r\n          console.log(this.state)\r\n        }} /> */}\r\n       \r\n        {/* <CardList monstersNew={this.state.monstersNew} /> */}\r\n        {/* <CardList monstersNew={fieldMonster} /> */}\r\n        {/* <SearchBox placeholder='Search Monster' handleChange = { e => this.setState({ searchField: e.target.value })}/> */}\r\n        <SearchBox placeholder='Search Monster' handleChange = {this.handleChange}/>\r\n        {/* We must need to add that handle functio into the above before the render function */}\r\n        <CardList monstersNew={filteredMonsterNew}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}